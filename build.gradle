plugins {
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'java'
}

group = 'com.laonstory'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
ext {
    set('springCloudVersion', "Hoxton.SR8")
    set('snippetsDir', file("build/generated-snippets"))
}
repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.projectlombok:lombok:1.18.20'

    //소셜로긴
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'junit:junit:4.12'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

    implementation 'org.projectlombok:lombok:1.18.16'
    runtimeOnly("com.h2database:h2") // test



    annotationProcessor("com.querydsl:querydsl-apt:4.3.1:jpa")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    implementation 'com.querydsl:querydsl-jpa'



    //스웨거
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

//	권한
    implementation "org.springframework.security.oauth:spring-security-oauth2:2.0.1.RELEASE"
}

test {
    useJUnitPlatform()
}
asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

//bootJar {
//    dependsOn asciidoctor
//    from("${asciidoctor.outputDir}/html5") {
//        into 'static/docs'
//    }
//}

def generated = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [generated]
}




clean.doLast {
    file(generated).deleteDir()
}